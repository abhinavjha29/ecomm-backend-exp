services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ecommerce}
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - ecommerce-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: ecommerce-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: ${PORT:-5080}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ecommerce}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}
      SALT_ROUNDS: ${SALT_ROUNDS:-10}
    ports:
      - '${PORT:-5080}:5080'
    networks:
      - ecommerce-network
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running Prisma migrations...' &&
        npx prisma migrate deploy &&
        echo 'Starting application...' &&
        npm start
      "
    healthcheck:
      test: ['CMD', 'wget', '--quiet', '--tries=1', '--spider', 'http://localhost:5080/api/test']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development service (optional - use when developing)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: ecommerce-app-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: ${PORT:-5080}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-ecommerce}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}
      SALT_ROUNDS: ${SALT_ROUNDS:-10}
    ports:
      - '${PORT:-5080}:5080'
    networks:
      - ecommerce-network
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Generating Prisma Client...' &&
        npx prisma generate &&
        echo 'Running Prisma migrations...' &&
        npx prisma migrate dev &&
        echo 'Starting development server...' &&
        npm run dev
      "
    profiles:
      - dev

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local